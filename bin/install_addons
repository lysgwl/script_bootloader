#!/bin/sh

: "
	install addons
"

# 插件标识
addons_flag=0

if [ 0${SCRIPT_SYS_PATH} = 0 ]; then
	# 当前路径
	SCRIPT_CUR_PATH=$(cd `dirname "$0}"` >/dev/null 2>&1; pwd)

	# 环境变量
	. ${SCRIPT_CUR_PATH}/options
	
	# 功能函数
	. ${SCRIPT_CUR_PATH}/feature
	
	# 插件标识
	addons_flag=1
fi

# 运行参数
SCRIPT_RUN_PARAM=${SCRIPT_INIT_FLAG}

# 参数判断
if [ $# == 0 ] || [ $1 == ${SCRIPT_INIT_FLAG} ]; then
	SCRIPT_RUN_PARAM=${SCRIPT_INIT_FLAG}
elif [ $1 == ${SCRIPT_UNINIT_FLAG} ]; then
	SCRIPT_RUN_PARAM=${SCRIPT_UNINIT_FLAG}	
fi

# 初始化函数
if [ ${addons_flag} == 1 ]; then
	. ${SCRIPT_CUR_PATH}/init ${SCRIPT_RUN_PARAM} "${SCRIPT_CUR_PATH}"
fi

# AddOns路径
ADDONS_VAR_PATH="${SCRIPT_VAR_PATH}/addons"

# Addons缺省路径
ADDONS_DEFAULT_PATH="${SCRIPT_USR_PATH}/expandAddons"

# 插件安装列表
ADDONS_INSTALL_LIST="${ADDONS_VAR_PATH}/addons_install_list"

# 设置插件环境
setAddonsEnv()
{
	if [ -z "$(nvram get sbl_password)" ]; then
		while [ 1 ]; do
			echo -ne "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: input the user password: "
			
			stty erase ^H
			read userpasswd
			
			# 特殊字符判断
			
			username="$(nvram get http_username)"
			userpasswd="${userpasswd}"
			
			echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mUSERNAME\033[0m: ${username}"
			echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: \033[4mPASSWORD\033[0m: ${userpasswd}"
			
			nvram set sbl_username="${username}"
			nvram set sbl_password="${userpasswd}"
			
			nvram commit
			break
		done
	fi
	
: <<'COMMENT'
	# 清除monit服务
	clearMonitSrvList
COMMENT
}

# 设置插件列表
setAddonsList()
{
	if [ ! -d ${ADDONS_VAR_PATH} ]; then
		mkdir "${ADDONS_VAR_PATH}"
	fi

	if [ -e  ${ADDONS_INSTALL_LIST} ]; then
		rm -rf "${ADDONS_INSTALL_LIST}"
	fi
	
	order=1
	state=0
	
	for file in `ls $1`
	do
		if [ ! -d "$1/$file" ]; then
			continue
		fi

		item="${file}"
		config="$1/${item}/bin/${item}_configure"
		
		if [ -e "${config}" ]; then
			echo -e "${order}\t${state}\t${item}\t${config}"  >> ${ADDONS_INSTALL_LIST}
			
			order=$((${order}+1))
		fi
	done	
}

# 显示插件目录
showAddonsMenu()
{
	#clear

	printf "\033[1;33m%s\033[0m\n" "select the plug-in to ${SERVICE_FUNCTION}:"
	printf "\033[1;31m%4d. %s\033[0m\n" "0" "exit"

	awk '{
		if($0!="") {
			printf "\033[1;36m%4d. %s\033[0m\n", $1, $3
		};
	}' "${ADDONS_INSTALL_LIST}"

	echo -ne "\n please input the order number:"
}

# 获取用户输入值
getUserInputValue()
{
	stty erase ^H
	read value
	
	echo "$value"|[ -n "`sed -n '/^[0-9][0-9]*$/p'`" ]
	
	if [ "$?" = "0" ]; then
		result=$value
	else
		result=-1
	fi
	
	echo "$result"
}

# 执行插件功能
ExecAddonsFunc()
{
	# 获取插件列表数量
	count=`cat ${ADDONS_INSTALL_LIST} | wc -l`

	while [ 1 ]; do
		# 显示插件目录
		showAddonsMenu

		# 获取用户输入
		value=`getUserInputValue`
	
		# 判断输入值是否有效
		if [ $value -lt 0 ] || [ $value -gt $count ]; then
			echo -e "\033[1;43;31mNOTICE\033[0m: please input the correct number index!\n"
			continue
		fi
		
		# 退出选择列表
		if [ $value -eq 0 ]; then
			break
		fi
		
		# 获取选择插件信息
		eval $(awk '{
				if($1=='"$value"')
				{
					printf("state=%d;file=%s;",$2,$4)
				}
			}' "${ADDONS_INSTALL_LIST}")
			
		if [ -e ${file} ]; then
			. ${file} ${SCRIPT_RUN_PARAM}
		fi	

		pause "Press any key to continue..."
	done
}

# 安装插件
installAddons()
{
	echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: ${SERVICE_FUNCTION} addons!"
	
	if [ ! -e "${ADDONS_INSTALL_LIST}" ]; then
		echo -e "($(basename $0)): $$ \033[1;41;37mFAILURE\033[0m: the plugin list does not exist, please check!"
		return
	fi

	# 执行插件功能
	ExecAddonsFunc
}

# 卸载插件
uninstallAddons()
{
	echo -e "($(basename $0)): $$ \033[1;44;37mINFO\033[0m: ${SERVICE_FUNCTION} addons!"

	if [ ! -e "${ADDONS_INSTALL_LIST}" ]; then
		echo -e "($(basename $0)): $$ \033[1;41;37mFAILURE\033[0m: the plugin list does not exist, please check!"
		return
	fi

	if [ ${addons_flag} == 0 ]; then
		# 读取插件列表文件
		while read line; do
			if [ ! -z "${line}" ]; then
				state=`echo $line | awk '{print $2}'`
				file=`echo $line | awk '{print $4}'`
				
				if [ -e ${file} ]; then
					. ${file} ${SCRIPT_RUN_PARAM}
				fi
			fi
		done < ${ADDONS_INSTALL_LIST}
	else
		# 执行插件功能
		ExecAddonsFunc
	fi
}

# 初始化插件
initAddons()
{
	if [ ${addons_flag} == 0 ]; then
		# 插件目录
		addonsDir=${ADDONS_DEFAULT_PATH}
		
		# 设置插件列表
		setAddonsList ${addonsDir}
		
		# 设置插件环境
		setAddonsEnv
	fi

	# 显示插件目录
	installAddons
}

# 释放插件
uninitAddons()
{
	# 卸载插件
	uninstallAddons
}

case ${SCRIPT_RUN_PARAM} in
	${SCRIPT_UNINIT_FLAG})
		# 释放插件
		uninitAddons
		;;
	${SCRIPT_INIT_FLAG})
		# 初始化插件
		initAddons
		;;
	*)
		;;
esac